{"ast":null,"code":"var _jsxFileName = \"/Users/elarh/Desktop/Margav Energy CRM/frontend/src/components/KanbanBoard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { leadsAPI } from '../api';\nimport { toast } from 'react-toastify';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableLeadCard = ({\n  lead,\n  getStatusBadgeColor,\n  getStatusDisplayName,\n  formatDate\n}) => {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id: lead.id.toString()\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: \"bg-white rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow cursor-grab active:cursor-grabbing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start justify-between mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-gray-900 text-sm\",\n        children: lead.full_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(lead.status)}`,\n        children: getStatusDisplayName(lead.status)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1 text-xs text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCDE \", lead.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), lead.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCE7 \", lead.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }, this), lead.appointment_date && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCC5 \", formatDate(lead.appointment_date)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), lead.sale_amount && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-green-600\",\n        children: [\"\\uD83D\\uDCB0 $\", lead.sale_amount.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), lead.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-gray-500 mt-2 line-clamp-2\",\n      children: lead.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-gray-400\",\n      children: [\"Assigned to: \", lead.assigned_agent_name || lead.assigned_agent_username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(SortableLeadCard, \"iTIyvp0X9kMGpdHRsWsr2+tGbVI=\", false, function () {\n  return [useSortable];\n});\n_c = SortableLeadCard;\nconst KanbanBoard = ({\n  userRole\n}) => {\n  _s2();\n  const [columns, setColumns] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchLeads();\n  }, [userRole]);\n  const fetchLeads = async () => {\n    try {\n      setLoading(true);\n      const response = await leadsAPI.getLeads();\n      const leads = response.results;\n\n      // Define columns based on user role\n      let columnDefinitions = [];\n      if (userRole === 'admin') {\n        columnDefinitions = [{\n          id: 'cold_call',\n          title: 'Cold Calls',\n          statuses: ['cold_call'],\n          color: 'bg-gray-100'\n        }, {\n          id: 'interested',\n          title: 'Interested',\n          statuses: ['sent_to_kelly'],\n          color: 'bg-blue-100'\n        }, {\n          id: 'qualified',\n          title: 'Qualified',\n          statuses: ['qualified'],\n          color: 'bg-green-100'\n        }, {\n          id: 'appointments',\n          title: 'Appointments',\n          statuses: ['appointment_set'],\n          color: 'bg-purple-100'\n        }, {\n          id: 'completed',\n          title: 'Completed',\n          statuses: ['appointment_completed'],\n          color: 'bg-yellow-100'\n        }, {\n          id: 'sales',\n          title: 'Sales',\n          statuses: ['sale_made', 'sale_lost'],\n          color: 'bg-indigo-100'\n        }];\n      } else if (userRole === 'agent') {\n        columnDefinitions = [{\n          id: 'cold_call',\n          title: 'Cold Calls',\n          statuses: ['cold_call'],\n          color: 'bg-gray-100'\n        }, {\n          id: 'interested',\n          title: 'Interested',\n          statuses: ['interested'],\n          color: 'bg-blue-100'\n        }, {\n          id: 'sent_to_kelly',\n          title: 'Sent to Kelly',\n          statuses: ['sent_to_kelly'],\n          color: 'bg-green-100'\n        }, {\n          id: 'not_interested',\n          title: 'Not Interested',\n          statuses: ['not_interested', 'tenant', 'other_disposition'],\n          color: 'bg-red-100'\n        }];\n      } else if (userRole === 'qualifier') {\n        columnDefinitions = [{\n          id: 'sent_to_kelly',\n          title: 'To Qualify',\n          statuses: ['sent_to_kelly'],\n          color: 'bg-blue-100'\n        }, {\n          id: 'qualified',\n          title: 'Qualified',\n          statuses: ['qualified'],\n          color: 'bg-green-100'\n        }, {\n          id: 'appointments',\n          title: 'Appointments Set',\n          statuses: ['appointment_set'],\n          color: 'bg-purple-100'\n        }, {\n          id: 'not_qualified',\n          title: 'Not Qualified',\n          statuses: ['not_interested'],\n          color: 'bg-red-100'\n        }];\n      } else if (userRole === 'salesrep') {\n        columnDefinitions = [{\n          id: 'appointments',\n          title: 'My Appointments',\n          statuses: ['appointment_set'],\n          color: 'bg-purple-100'\n        }, {\n          id: 'completed',\n          title: 'Completed',\n          statuses: ['appointment_completed'],\n          color: 'bg-yellow-100'\n        }, {\n          id: 'sales',\n          title: 'Sales Results',\n          statuses: ['sale_made', 'sale_lost'],\n          color: 'bg-indigo-100'\n        }];\n      }\n\n      // Populate columns with leads\n      const populatedColumns = columnDefinitions.map(column => ({\n        ...column,\n        leads: leads.filter(lead => column.statuses.includes(lead.status))\n      }));\n      setColumns(populatedColumns);\n    } catch (error) {\n      console.error('Failed to fetch leads:', error);\n      toast.error('Failed to fetch leads');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getStatusBadgeColor = status => {\n    const colors = {\n      'cold_call': 'bg-gray-100 text-gray-800',\n      'interested': 'bg-blue-100 text-blue-800',\n      'sent_to_kelly': 'bg-green-100 text-green-800',\n      'qualified': 'bg-green-100 text-green-800',\n      'appointment_set': 'bg-purple-100 text-purple-800',\n      'appointment_completed': 'bg-yellow-100 text-yellow-800',\n      'sale_made': 'bg-green-100 text-green-800',\n      'sale_lost': 'bg-red-100 text-red-800',\n      'not_interested': 'bg-red-100 text-red-800',\n      'tenant': 'bg-orange-100 text-orange-800',\n      'other_disposition': 'bg-gray-100 text-gray-800'\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800';\n  };\n  const getStatusDisplayName = status => {\n    const names = {\n      'cold_call': 'Cold Call',\n      'interested': 'Interested',\n      'sent_to_kelly': 'Sent to Kelly',\n      'qualified': 'Qualified',\n      'appointment_set': 'Appointment Set',\n      'appointment_completed': 'Completed',\n      'sale_made': 'Sale Made',\n      'sale_lost': 'Sale Lost',\n      'not_interested': 'Not Interested',\n      'tenant': 'Tenant',\n      'other_disposition': 'Other'\n    };\n    return names[status] || status;\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\",\n        children: \"Lead Pipeline - Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLeads,\n        className: \"btn-margav-secondary\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4 min-w-max pb-4\",\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 w-80\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${column.color} rounded-lg p-4`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900\",\n                children: column.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-white bg-opacity-50 text-gray-700 px-2 py-1 rounded-full text-sm font-medium\",\n                children: column.leads.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3 max-h-96 overflow-y-auto\",\n              children: column.leads.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-8 text-gray-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-4xl mb-2\",\n                  children: \"\\uD83D\\uDCCB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm\",\n                  children: \"No leads\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this) : column.leads.map(lead => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-900 text-sm\",\n                    children: lead.full_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(lead.status)}`,\n                    children: getStatusDisplayName(lead.status)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1 text-xs text-gray-600\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uD83D\\uDCDE \", lead.phone]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this), lead.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uD83D\\uDCE7 \", lead.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 42\n                  }, this), lead.appointment_date && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uD83D\\uDCC5 \", formatDate(lead.appointment_date)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 29\n                  }, this), lead.sale_amount && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-semibold text-green-600\",\n                    children: [\"\\uD83D\\uDCB0 $\", lead.sale_amount.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this), lead.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500 mt-2 line-clamp-2\",\n                  children: lead.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-xs text-gray-400\",\n                  children: [\"Assigned to: \", lead.assigned_agent_name || lead.assigned_agent_username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)]\n              }, lead.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s2(KanbanBoard, \"eMGM1e4j81lb340GEfZhtMAXb7Q=\");\n_c2 = KanbanBoard;\nexport default KanbanBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableLeadCard\");\n$RefreshReg$(_c2, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","leadsAPI","toast","useSortable","CSS","jsxDEV","_jsxDEV","SortableLeadCard","lead","getStatusBadgeColor","getStatusDisplayName","formatDate","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","id","toString","style","Transform","opacity","ref","className","children","full_name","fileName","_jsxFileName","lineNumber","columnNumber","status","phone","email","appointment_date","sale_amount","toLocaleString","notes","assigned_agent_name","assigned_agent_username","_c","KanbanBoard","userRole","_s2","columns","setColumns","loading","setLoading","fetchLeads","response","getLeads","leads","results","columnDefinitions","title","statuses","color","populatedColumns","map","column","filter","includes","error","console","colors","names","dateString","Date","toLocaleDateString","month","day","hour","minute","onClick","length","_c2","$RefreshReg$"],"sources":["/Users/elarh/Desktop/Margav Energy CRM/frontend/src/components/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Lead } from '../types';\nimport { leadsAPI } from '../api';\nimport { toast } from 'react-toastify';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n  DragOverlay,\n  DragStartEvent,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport {\n  useSortable,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\ninterface KanbanBoardProps {\n  userRole: string;\n}\n\ninterface KanbanColumn {\n  id: string;\n  title: string;\n  statuses: string[];\n  color: string;\n  leads: Lead[];\n}\n\ninterface SortableLeadCardProps {\n  lead: Lead;\n  getStatusBadgeColor: (status: string) => string;\n  getStatusDisplayName: (status: string) => string;\n  formatDate: (dateString: string) => string;\n}\n\nconst SortableLeadCard: React.FC<SortableLeadCardProps> = ({\n  lead,\n  getStatusBadgeColor,\n  getStatusDisplayName,\n  formatDate,\n}) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: lead.id.toString() });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n      className=\"bg-white rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow cursor-grab active:cursor-grabbing\"\n    >\n      <div className=\"flex items-start justify-between mb-2\">\n        <h4 className=\"font-medium text-gray-900 text-sm\">{lead.full_name}</h4>\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(lead.status)}`}>\n          {getStatusDisplayName(lead.status)}\n        </span>\n      </div>\n      \n      <div className=\"space-y-1 text-xs text-gray-600\">\n        <p>📞 {lead.phone}</p>\n        {lead.email && <p>📧 {lead.email}</p>}\n        {lead.appointment_date && (\n          <p>📅 {formatDate(lead.appointment_date)}</p>\n        )}\n        {lead.sale_amount && (\n          <p className=\"font-semibold text-green-600\">💰 ${lead.sale_amount.toLocaleString()}</p>\n        )}\n      </div>\n      \n      {lead.notes && (\n        <p className=\"text-xs text-gray-500 mt-2 line-clamp-2\">{lead.notes}</p>\n      )}\n      \n      <div className=\"mt-2 text-xs text-gray-400\">\n        Assigned to: {lead.assigned_agent_name || lead.assigned_agent_username}\n      </div>\n    </div>\n  );\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ userRole }) => {\n  const [columns, setColumns] = useState<KanbanColumn[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchLeads();\n  }, [userRole]);\n\n  const fetchLeads = async () => {\n    try {\n      setLoading(true);\n      const response = await leadsAPI.getLeads();\n      const leads = response.results;\n      \n      // Define columns based on user role\n      let columnDefinitions: Omit<KanbanColumn, 'leads'>[] = [];\n      \n      if (userRole === 'admin') {\n        columnDefinitions = [\n          { id: 'cold_call', title: 'Cold Calls', statuses: ['cold_call'], color: 'bg-gray-100' },\n          { id: 'interested', title: 'Interested', statuses: ['sent_to_kelly'], color: 'bg-blue-100' },\n          { id: 'qualified', title: 'Qualified', statuses: ['qualified'], color: 'bg-green-100' },\n          { id: 'appointments', title: 'Appointments', statuses: ['appointment_set'], color: 'bg-purple-100' },\n          { id: 'completed', title: 'Completed', statuses: ['appointment_completed'], color: 'bg-yellow-100' },\n          { id: 'sales', title: 'Sales', statuses: ['sale_made', 'sale_lost'], color: 'bg-indigo-100' },\n        ];\n      } else if (userRole === 'agent') {\n        columnDefinitions = [\n          { id: 'cold_call', title: 'Cold Calls', statuses: ['cold_call'], color: 'bg-gray-100' },\n          { id: 'interested', title: 'Interested', statuses: ['interested'], color: 'bg-blue-100' },\n          { id: 'sent_to_kelly', title: 'Sent to Kelly', statuses: ['sent_to_kelly'], color: 'bg-green-100' },\n          { id: 'not_interested', title: 'Not Interested', statuses: ['not_interested', 'tenant', 'other_disposition'], color: 'bg-red-100' },\n        ];\n      } else if (userRole === 'qualifier') {\n        columnDefinitions = [\n          { id: 'sent_to_kelly', title: 'To Qualify', statuses: ['sent_to_kelly'], color: 'bg-blue-100' },\n          { id: 'qualified', title: 'Qualified', statuses: ['qualified'], color: 'bg-green-100' },\n          { id: 'appointments', title: 'Appointments Set', statuses: ['appointment_set'], color: 'bg-purple-100' },\n          { id: 'not_qualified', title: 'Not Qualified', statuses: ['not_interested'], color: 'bg-red-100' },\n        ];\n      } else if (userRole === 'salesrep') {\n        columnDefinitions = [\n          { id: 'appointments', title: 'My Appointments', statuses: ['appointment_set'], color: 'bg-purple-100' },\n          { id: 'completed', title: 'Completed', statuses: ['appointment_completed'], color: 'bg-yellow-100' },\n          { id: 'sales', title: 'Sales Results', statuses: ['sale_made', 'sale_lost'], color: 'bg-indigo-100' },\n        ];\n      }\n\n      // Populate columns with leads\n      const populatedColumns = columnDefinitions.map(column => ({\n        ...column,\n        leads: leads.filter(lead => column.statuses.includes(lead.status))\n      }));\n\n      setColumns(populatedColumns);\n    } catch (error) {\n      console.error('Failed to fetch leads:', error);\n      toast.error('Failed to fetch leads');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadgeColor = (status: string) => {\n    const colors: { [key: string]: string } = {\n      'cold_call': 'bg-gray-100 text-gray-800',\n      'interested': 'bg-blue-100 text-blue-800',\n      'sent_to_kelly': 'bg-green-100 text-green-800',\n      'qualified': 'bg-green-100 text-green-800',\n      'appointment_set': 'bg-purple-100 text-purple-800',\n      'appointment_completed': 'bg-yellow-100 text-yellow-800',\n      'sale_made': 'bg-green-100 text-green-800',\n      'sale_lost': 'bg-red-100 text-red-800',\n      'not_interested': 'bg-red-100 text-red-800',\n      'tenant': 'bg-orange-100 text-orange-800',\n      'other_disposition': 'bg-gray-100 text-gray-800',\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getStatusDisplayName = (status: string) => {\n    const names: { [key: string]: string } = {\n      'cold_call': 'Cold Call',\n      'interested': 'Interested',\n      'sent_to_kelly': 'Sent to Kelly',\n      'qualified': 'Qualified',\n      'appointment_set': 'Appointment Set',\n      'appointment_completed': 'Completed',\n      'sale_made': 'Sale Made',\n      'sale_lost': 'Sale Lost',\n      'not_interested': 'Not Interested',\n      'tenant': 'Tenant',\n      'other_disposition': 'Other',\n    };\n    return names[status] || status;\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\n          Lead Pipeline - Kanban Board\n        </h2>\n        <button\n          onClick={fetchLeads}\n          className=\"btn-margav-secondary\"\n        >\n          Refresh\n        </button>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <div className=\"flex space-x-4 min-w-max pb-4\">\n          {columns.map((column) => (\n            <div key={column.id} className=\"flex-shrink-0 w-80\">\n              <div className={`${column.color} rounded-lg p-4`}>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"font-semibold text-gray-900\">{column.title}</h3>\n                  <span className=\"bg-white bg-opacity-50 text-gray-700 px-2 py-1 rounded-full text-sm font-medium\">\n                    {column.leads.length}\n                  </span>\n                </div>\n                \n                <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                  {column.leads.length === 0 ? (\n                    <div className=\"text-center py-8 text-gray-500\">\n                      <div className=\"text-4xl mb-2\">📋</div>\n                      <p className=\"text-sm\">No leads</p>\n                    </div>\n                  ) : (\n                    column.leads.map((lead) => (\n                      <div key={lead.id} className=\"bg-white rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <h4 className=\"font-medium text-gray-900 text-sm\">{lead.full_name}</h4>\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusBadgeColor(lead.status)}`}>\n                            {getStatusDisplayName(lead.status)}\n                          </span>\n                        </div>\n                        \n                        <div className=\"space-y-1 text-xs text-gray-600\">\n                          <p>📞 {lead.phone}</p>\n                          {lead.email && <p>📧 {lead.email}</p>}\n                          {lead.appointment_date && (\n                            <p>📅 {formatDate(lead.appointment_date)}</p>\n                          )}\n                          {lead.sale_amount && (\n                            <p className=\"font-semibold text-green-600\">💰 ${lead.sale_amount.toLocaleString()}</p>\n                          )}\n                        </div>\n                        \n                        {lead.notes && (\n                          <p className=\"text-xs text-gray-500 mt-2 line-clamp-2\">{lead.notes}</p>\n                        )}\n                        \n                        <div className=\"mt-2 text-xs text-gray-400\">\n                          Assigned to: {lead.assigned_agent_name || lead.assigned_agent_username}\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}