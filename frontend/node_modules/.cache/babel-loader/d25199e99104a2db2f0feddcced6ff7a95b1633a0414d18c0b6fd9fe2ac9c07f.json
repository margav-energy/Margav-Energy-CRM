{"ast":null,"code":"import axios from'axios';// Base API configuration\nconst API_BASE_URL='http://localhost:8000/api';// Create axios instance\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Token management\nlet authToken=localStorage.getItem('authToken');export const setAuthToken=token=>{authToken=token;if(token){localStorage.setItem('authToken',token);api.defaults.headers.common['Authorization']=\"Token \".concat(token);}else{localStorage.removeItem('authToken');delete api.defaults.headers.common['Authorization'];}};// Initialize token on app start\nif(authToken){api.defaults.headers.common['Authorization']=\"Token \".concat(authToken);}// Request interceptor to add auth token\napi.interceptors.request.use(config=>{if(authToken){config.headers.Authorization=\"Token \".concat(authToken);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){setAuthToken(null);window.location.href='/login';}return Promise.reject(error);});// Auth API\nexport const authAPI={login:async credentials=>{const response=await api.post('/api-token-auth/',credentials);return response.data;},getCurrentUser:async()=>{const response=await api.get('/users/me/');return response.data;},logout:()=>{setAuthToken(null);}};// Users API\nexport const usersAPI={getUsers:async()=>{const response=await api.get('/users/');return response.data;},getUser:async id=>{const response=await api.get(\"/users/\".concat(id,\"/\"));return response.data;}};// Leads API\nexport const leadsAPI={getLeads:async params=>{const response=await api.get('/leads/',{params});return response.data;},getLead:async id=>{const response=await api.get(\"/leads/\".concat(id,\"/\"));return response.data;},createLead:async leadData=>{const response=await api.post('/leads/',leadData);return response.data;},updateLead:async(id,leadData)=>{const response=await api.patch(\"/leads/\".concat(id,\"/\"),leadData);return response.data;},deleteLead:async id=>{await api.delete(\"/leads/\".concat(id,\"/\"));},getMyLeads:async()=>{const response=await api.get('/leads/my/');return response.data;},getColdCallLeads:async()=>{const response=await api.get('/leads/cold-call/');return response.data;},updateLeadDisposition:async(id,disposition)=>{const response=await api.post(\"/leads/\".concat(id,\"/disposition/\"),disposition);return response.data;},sendToKelly:async id=>{const response=await api.post(\"/leads/\".concat(id,\"/send-to-kelly/\"));return response.data;},qualifyLead:async(id,data)=>{const response=await api.post(\"/leads/\".concat(id,\"/qualify/\"),data);return response.data;},completeAppointment:async(id,data)=>{const response=await api.post(\"/leads/\".concat(id,\"/complete-appointment/\"),data);return response.data;}};// Dialer API\nexport const dialerAPI={getDialerStatus:async()=>{const response=await api.get('/dialer/');return response.data;},updateDialerStatus:async isActive=>{const response=await api.patch('/dialer/',{is_active:isActive});return response.data;}};// Notifications API\nexport const notificationsAPI={getNotifications:async()=>{const response=await api.get('/notifications/');return response.data;},markNotificationRead:async notificationId=>{const response=await api.post(\"/notifications/\".concat(notificationId,\"/mark-read/\"));return response.data;},markAllNotificationsRead:async()=>{const response=await api.post('/notifications/mark-all-read/');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","authToken","localStorage","getItem","setAuthToken","token","setItem","defaults","common","concat","removeItem","interceptors","request","use","config","Authorization","error","Promise","reject","response","_error$response","status","window","location","href","authAPI","login","credentials","post","data","getCurrentUser","get","logout","usersAPI","getUsers","getUser","id","leadsAPI","getLeads","params","getLead","createLead","leadData","updateLead","patch","deleteLead","delete","getMyLeads","getColdCallLeads","updateLeadDisposition","disposition","sendToKelly","qualifyLead","completeAppointment","dialerAPI","getDialerStatus","updateDialerStatus","isActive","is_active","notificationsAPI","getNotifications","markNotificationRead","notificationId","markAllNotificationsRead"],"sources":["/Users/elarh/Desktop/Margav Energy CRM/frontend/src/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { AuthResponse, User, Lead, Dialer, ApiResponse, LoginForm, LeadForm, LeadUpdateForm, LeadDispositionForm, LeadNotification } from './types';\n\n// Base API configuration\nconst API_BASE_URL = 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Token management\nlet authToken: string | null = localStorage.getItem('authToken');\n\nexport const setAuthToken = (token: string | null) => {\n  authToken = token;\n  if (token) {\n    localStorage.setItem('authToken', token);\n    api.defaults.headers.common['Authorization'] = `Token ${token}`;\n  } else {\n    localStorage.removeItem('authToken');\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\n\n// Initialize token on app start\nif (authToken) {\n  api.defaults.headers.common['Authorization'] = `Token ${authToken}`;\n}\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    if (authToken) {\n      config.headers.Authorization = `Token ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      setAuthToken(null);\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: async (credentials: LoginForm): Promise<AuthResponse> => {\n    const response: AxiosResponse<AuthResponse> = await api.post('/api-token-auth/', credentials);\n    return response.data;\n  },\n\n  getCurrentUser: async (): Promise<User> => {\n    const response: AxiosResponse<User> = await api.get('/users/me/');\n    return response.data;\n  },\n\n  logout: () => {\n    setAuthToken(null);\n  },\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: async (): Promise<ApiResponse<User>> => {\n    const response: AxiosResponse<ApiResponse<User>> = await api.get('/users/');\n    return response.data;\n  },\n\n  getUser: async (id: number): Promise<User> => {\n    const response: AxiosResponse<User> = await api.get(`/users/${id}/`);\n    return response.data;\n  },\n};\n\n// Leads API\nexport const leadsAPI = {\n  getLeads: async (params?: {\n    status?: string;\n    assigned_agent?: number;\n    search?: string;\n    ordering?: string;\n  }): Promise<ApiResponse<Lead>> => {\n    const response: AxiosResponse<ApiResponse<Lead>> = await api.get('/leads/', { params });\n    return response.data;\n  },\n\n  getLead: async (id: number): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.get(`/leads/${id}/`);\n    return response.data;\n  },\n\n  createLead: async (leadData: LeadForm): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.post('/leads/', leadData);\n    return response.data;\n  },\n\n  updateLead: async (id: number, leadData: LeadUpdateForm): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.patch(`/leads/${id}/`, leadData);\n    return response.data;\n  },\n\n  deleteLead: async (id: number): Promise<void> => {\n    await api.delete(`/leads/${id}/`);\n  },\n\n  getMyLeads: async (): Promise<ApiResponse<Lead>> => {\n    const response: AxiosResponse<ApiResponse<Lead>> = await api.get('/leads/my/');\n    return response.data;\n  },\n\n  getColdCallLeads: async (): Promise<ApiResponse<Lead>> => {\n    const response: AxiosResponse<ApiResponse<Lead>> = await api.get('/leads/cold-call/');\n    return response.data;\n  },\n\n  updateLeadDisposition: async (id: number, disposition: LeadDispositionForm): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.post(`/leads/${id}/disposition/`, disposition);\n    return response.data;\n  },\n\n  sendToKelly: async (id: number): Promise<{ message: string }> => {\n    const response: AxiosResponse<{ message: string }> = await api.post(`/leads/${id}/send-to-kelly/`);\n    return response.data;\n  },\n\n  qualifyLead: async (id: number, data: LeadUpdateForm): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.post(`/leads/${id}/qualify/`, data);\n    return response.data;\n  },\n\n  completeAppointment: async (id: number, data: LeadUpdateForm): Promise<Lead> => {\n    const response: AxiosResponse<Lead> = await api.post(`/leads/${id}/complete-appointment/`, data);\n    return response.data;\n  },\n};\n\n// Dialer API\nexport const dialerAPI = {\n  getDialerStatus: async (): Promise<Dialer> => {\n    const response: AxiosResponse<Dialer> = await api.get('/dialer/');\n    return response.data;\n  },\n\n  updateDialerStatus: async (isActive: boolean): Promise<Dialer> => {\n    const response: AxiosResponse<Dialer> = await api.patch('/dialer/', { is_active: isActive });\n    return response.data;\n  },\n};\n\n// Notifications API\nexport const notificationsAPI = {\n  getNotifications: async (): Promise<ApiResponse<LeadNotification>> => {\n    const response: AxiosResponse<ApiResponse<LeadNotification>> = await api.get('/notifications/');\n    return response.data;\n  },\n\n  markNotificationRead: async (notificationId: number): Promise<{ message: string }> => {\n    const response: AxiosResponse<{ message: string }> = await api.post(`/notifications/${notificationId}/mark-read/`);\n    return response.data;\n  },\n\n  markAllNotificationsRead: async (): Promise<{ message: string }> => {\n    const response: AxiosResponse<{ message: string }> = await api.post('/notifications/mark-all-read/');\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}