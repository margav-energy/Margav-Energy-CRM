{"ast":null,"code":"import _objectSpread from\"/Users/elarh/Desktop/Margav Energy CRM/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{leadsAPI,notificationsAPI}from'../api';import{toast}from'react-toastify';import LeadCard from'./LeadCard';import LeadForm from'./LeadForm';import CallSimulator from'./CallSimulator';import NotificationPanel from'./NotificationPanel';import MockCall from'./MockCall';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AgentDashboard=()=>{const[leads,setLeads]=useState([]);const[loading,setLoading]=useState(true);const[showLeadForm,setShowLeadForm]=useState(false);const[editingLead,setEditingLead]=useState(null);const[formLoading,setFormLoading]=useState(false);const[showNotifications,setShowNotifications]=useState(false);const[unreadCount,setUnreadCount]=useState(0);const[prepopulatedData,setPrepopulatedData]=useState(null);useEffect(()=>{fetchLeads();fetchNotificationCount();checkForDialerLead();},[]);// Check for URL parameters indicating a lead from dialer\nconst checkForDialerLead=()=>{const urlParams=new URLSearchParams(window.location.search);const hasDialerParams=urlParams.get('full_name')||urlParams.get('phone')||urlParams.get('email')||urlParams.get('notes');if(hasDialerParams){setShowLeadForm(true);toast.success('New lead received from dialer!',{position:'top-right',autoClose:3000});}};const fetchNotificationCount=async()=>{try{const response=await notificationsAPI.getNotifications();const unread=response.results.filter(n=>!n.is_read).length;setUnreadCount(unread);}catch(error){console.error('Failed to fetch notification count:',error);}};const fetchLeads=async()=>{try{setLoading(true);const response=await leadsAPI.getMyLeads();setLeads(response.results);}catch(error){console.error('Failed to fetch leads:',error);toast.error('Failed to fetch leads');}finally{setLoading(false);}};const handleCreateLead=async leadData=>{try{setFormLoading(true);// Set status to 'sent_to_kelly' so it goes to the qualifier\nconst leadDataWithStatus=_objectSpread(_objectSpread({},leadData),{},{status:'sent_to_kelly'});const newLead=await leadsAPI.createLead(leadDataWithStatus);setLeads(prev=>[newLead,...prev]);setShowLeadForm(false);setEditingLead(null);setPrepopulatedData(null);toast.success('Lead created successfully and sent to qualifier!');}catch(error){console.error('Failed to create lead:',error);// Extract error message from response\nlet errorMessage='Failed to create lead';if(error&&typeof error==='object'&&'response'in error){var _axiosError$response;const axiosError=error;if((_axiosError$response=axiosError.response)!==null&&_axiosError$response!==void 0&&_axiosError$response.data){if(typeof axiosError.response.data==='string'){errorMessage=axiosError.response.data;}else if(axiosError.response.data.detail){errorMessage=axiosError.response.data.detail;}else if(axiosError.response.data.phone){errorMessage=axiosError.response.data.phone[0];}else if(axiosError.response.data.full_name){errorMessage=axiosError.response.data.full_name[0];}}}toast.error(errorMessage);}finally{setFormLoading(false);}};const handleUpdateLead=async lead=>{setEditingLead(lead);setShowLeadForm(true);};const handleUpdateLeadSubmit=async leadData=>{if(!editingLead)return;try{setFormLoading(true);const updatedLead=await leadsAPI.updateLead(editingLead.id,leadData);setLeads(prev=>prev.map(lead=>lead.id===editingLead.id?updatedLead:lead));setShowLeadForm(false);setEditingLead(null);setPrepopulatedData(null);toast.success('Lead updated successfully!');}catch(error){console.error('Failed to update lead:',error);toast.error('Failed to update lead');}finally{setFormLoading(false);}};const handleDeleteLead=async lead=>{if(!window.confirm(\"Are you sure you want to delete the lead for \".concat(lead.full_name,\"?\"))){return;}try{await leadsAPI.deleteLead(lead.id);setLeads(prev=>prev.filter(l=>l.id!==lead.id));toast.success('Lead deleted successfully!');}catch(error){console.error('Failed to delete lead:',error);toast.error('Failed to delete lead');}};const handleCancelForm=()=>{setShowLeadForm(false);setEditingLead(null);setPrepopulatedData(null);};const handleIncomingCall=callData=>{// Set the URL parameters to simulate dialer data\nconst url=new URL(window.location.href);url.searchParams.set('full_name',callData.full_name);url.searchParams.set('phone',callData.phone);if(callData.email)url.searchParams.set('email',callData.email);if(callData.address)url.searchParams.set('address',callData.address);if(callData.postcode)url.searchParams.set('postcode',callData.postcode);if(callData.notes)url.searchParams.set('notes',callData.notes);// Update the URL without reloading the page\nwindow.history.replaceState({},'',url.toString());// Set prepopulated data for the form\nsetPrepopulatedData({full_name:callData.full_name,phone:callData.phone,email:callData.email||'',address:callData.address||'',postcode:callData.postcode||'',notes:callData.notes||''});// Trigger the auto-open functionality\nsetShowLeadForm(true);toast.success(\"Call completed! Lead form opened for \".concat(callData.full_name),{position:'top-right',autoClose:4000});};const handleLeadInterest=lead=>{// Prepopulate form data when lead shows interest\nsetPrepopulatedData({full_name:lead.full_name,phone:lead.phone,email:lead.email||'',address:'',// These would come from the call data\npostcode:'',notes:\"Lead showed interest during call. Original notes: \".concat(lead.notes||'')});setShowLeadForm(true);toast.info(\"\".concat(lead.full_name,\" is interested! Lead form opened with pre-filled information.\"));};const handleCallEnd=()=>{// Refresh leads after call ends\nfetchLeads();};const getStatusCounts=()=>{const counts={cold_call:0,interested:0,qualified:0,appointment_set:0,not_interested:0,tenant:0,other_disposition:0,sent_to_kelly:0,appointment_completed:0,sale_made:0,sale_lost:0};leads.forEach(lead=>{if(lead.status in counts){counts[lead.status]++;}});return counts;};const statusCounts=getStatusCounts();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-margav p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\",children:\"Agent Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mt-1\",children:\"Manage your assigned leads\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowNotifications(true),className:\"relative p-2 text-gray-600 hover:text-gray-800 transition-colors\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\uD83D\\uDD14\"}),unreadCount>0&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\",children:unreadCount})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLeadForm(true),className:\"btn-margav-primary\",children:\"Add New Lead\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 lg:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-margav p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-gradient-to-r from-green-400 to-green-500 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-lg font-bold\",children:\"I\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Interested\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-2xl font-bold text-gray-900\",children:statusCounts.interested})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-margav p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-gradient-to-r from-blue-400 to-blue-500 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-lg font-bold\",children:\"Q\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Qualified\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-2xl font-bold text-gray-900\",children:statusCounts.qualified})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-margav p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-gradient-to-r from-purple-400 to-purple-500 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-lg font-bold\",children:\"A\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Appointments\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-2xl font-bold text-gray-900\",children:statusCounts.appointment_set})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-margav p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 bg-gradient-to-r from-red-400 to-red-500 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-lg font-bold\",children:\"N\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Not Interested\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-2xl font-bold text-gray-900\",children:statusCounts.not_interested})]})})]})})]}),/*#__PURE__*/_jsx(MockCall,{onIncomingCall:handleIncomingCall}),/*#__PURE__*/_jsx(CallSimulator,{onLeadInterest:handleLeadInterest,onCallEnd:handleCallEnd}),showLeadForm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"relative top-20 mx-auto p-5 border w-full max-w-md shadow-lg rounded-md bg-white\",children:/*#__PURE__*/_jsx(LeadForm,{lead:editingLead||undefined,onSubmit:editingLead?handleUpdateLeadSubmit:handleCreateLead,onCancel:handleCancelForm,loading:formLoading,prepopulatedData:prepopulatedData||undefined})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-margav\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-gray-900\",children:\"Your Leads\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:\"Manage and track your assigned leads\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:leads.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto h-24 w-24 bg-gray-100 rounded-full flex items-center justify-center mb-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl text-gray-400\",children:\"\\uD83D\\uDCCB\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-lg\",children:\"No leads assigned to you yet.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm mt-2\",children:\"Use the \\\"Add New Lead\\\" button to get started.\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\",children:leads.map(lead=>/*#__PURE__*/_jsx(LeadCard,{lead:lead,onUpdate:handleUpdateLead,onDelete:handleDeleteLead,showActions:true},lead.id))})})]}),/*#__PURE__*/_jsx(NotificationPanel,{isOpen:showNotifications,onClose:()=>{setShowNotifications(false);fetchNotificationCount();// Refresh count when closing\n}})]});};export default AgentDashboard;","map":{"version":3,"names":["React","useState","useEffect","leadsAPI","notificationsAPI","toast","LeadCard","LeadForm","CallSimulator","NotificationPanel","MockCall","jsx","_jsx","jsxs","_jsxs","AgentDashboard","leads","setLeads","loading","setLoading","showLeadForm","setShowLeadForm","editingLead","setEditingLead","formLoading","setFormLoading","showNotifications","setShowNotifications","unreadCount","setUnreadCount","prepopulatedData","setPrepopulatedData","fetchLeads","fetchNotificationCount","checkForDialerLead","urlParams","URLSearchParams","window","location","search","hasDialerParams","get","success","position","autoClose","response","getNotifications","unread","results","filter","n","is_read","length","error","console","getMyLeads","handleCreateLead","leadData","leadDataWithStatus","_objectSpread","status","newLead","createLead","prev","errorMessage","_axiosError$response","axiosError","data","detail","phone","full_name","handleUpdateLead","lead","handleUpdateLeadSubmit","updatedLead","updateLead","id","map","handleDeleteLead","confirm","concat","deleteLead","l","handleCancelForm","handleIncomingCall","callData","url","URL","href","searchParams","set","email","address","postcode","notes","history","replaceState","toString","handleLeadInterest","info","handleCallEnd","getStatusCounts","counts","cold_call","interested","qualified","appointment_set","not_interested","tenant","other_disposition","sent_to_kelly","appointment_completed","sale_made","sale_lost","forEach","statusCounts","className","children","onClick","onIncomingCall","onLeadInterest","onCallEnd","undefined","onSubmit","onCancel","onUpdate","onDelete","showActions","isOpen","onClose"],"sources":["/Users/elarh/Desktop/Margav Energy CRM/frontend/src/components/AgentDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Lead, LeadForm as LeadFormType, LeadNotification } from '../types';\nimport { leadsAPI, notificationsAPI } from '../api';\nimport { toast } from 'react-toastify';\nimport LeadCard from './LeadCard';\nimport LeadForm from './LeadForm';\nimport CallSimulator from './CallSimulator';\nimport NotificationPanel from './NotificationPanel';\nimport MockCall from './MockCall';\n\nconst AgentDashboard: React.FC = () => {\n  const [leads, setLeads] = useState<Lead[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showLeadForm, setShowLeadForm] = useState(false);\n  const [editingLead, setEditingLead] = useState<Lead | null>(null);\n  const [formLoading, setFormLoading] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [prepopulatedData, setPrepopulatedData] = useState<{\n    full_name?: string;\n    phone?: string;\n    email?: string;\n    address?: string;\n    postcode?: string;\n    notes?: string;\n  } | null>(null);\n\n  useEffect(() => {\n    fetchLeads();\n    fetchNotificationCount();\n    checkForDialerLead();\n  }, []);\n\n  // Check for URL parameters indicating a lead from dialer\n  const checkForDialerLead = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const hasDialerParams = urlParams.get('full_name') || urlParams.get('phone') || urlParams.get('email') || urlParams.get('notes');\n    \n    if (hasDialerParams) {\n      setShowLeadForm(true);\n      toast.success('New lead received from dialer!', {\n        position: 'top-right',\n        autoClose: 3000,\n      });\n    }\n  };\n\n  const fetchNotificationCount = async () => {\n    try {\n      const response = await notificationsAPI.getNotifications();\n      const unread = response.results.filter(n => !n.is_read).length;\n      setUnreadCount(unread);\n    } catch (error) {\n      console.error('Failed to fetch notification count:', error);\n    }\n  };\n\n  const fetchLeads = async () => {\n    try {\n      setLoading(true);\n      const response = await leadsAPI.getMyLeads();\n      setLeads(response.results);\n    } catch (error) {\n      console.error('Failed to fetch leads:', error);\n      toast.error('Failed to fetch leads');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateLead = async (leadData: LeadFormType) => {\n    try {\n      setFormLoading(true);\n      // Set status to 'sent_to_kelly' so it goes to the qualifier\n      const leadDataWithStatus = {\n        ...leadData,\n        status: 'sent_to_kelly'\n      };\n      const newLead = await leadsAPI.createLead(leadDataWithStatus);\n      setLeads(prev => [newLead, ...prev]);\n      setShowLeadForm(false);\n      setEditingLead(null);\n      setPrepopulatedData(null);\n      toast.success('Lead created successfully and sent to qualifier!');\n    } catch (error) {\n      console.error('Failed to create lead:', error);\n      \n      // Extract error message from response\n      let errorMessage = 'Failed to create lead';\n      if (error && typeof error === 'object' && 'response' in error) {\n        const axiosError = error as any;\n        if (axiosError.response?.data) {\n          if (typeof axiosError.response.data === 'string') {\n            errorMessage = axiosError.response.data;\n          } else if (axiosError.response.data.detail) {\n            errorMessage = axiosError.response.data.detail;\n          } else if (axiosError.response.data.phone) {\n            errorMessage = axiosError.response.data.phone[0];\n          } else if (axiosError.response.data.full_name) {\n            errorMessage = axiosError.response.data.full_name[0];\n          }\n        }\n      }\n      \n      toast.error(errorMessage);\n    } finally {\n      setFormLoading(false);\n    }\n  };\n\n  const handleUpdateLead = async (lead: Lead) => {\n    setEditingLead(lead);\n    setShowLeadForm(true);\n  };\n\n  const handleUpdateLeadSubmit = async (leadData: LeadFormType) => {\n    if (!editingLead) return;\n    \n    try {\n      setFormLoading(true);\n      const updatedLead = await leadsAPI.updateLead(editingLead.id, leadData);\n      setLeads(prev => prev.map(lead => lead.id === editingLead.id ? updatedLead : lead));\n      setShowLeadForm(false);\n      setEditingLead(null);\n      setPrepopulatedData(null);\n      toast.success('Lead updated successfully!');\n    } catch (error) {\n      console.error('Failed to update lead:', error);\n      toast.error('Failed to update lead');\n    } finally {\n      setFormLoading(false);\n    }\n  };\n\n  const handleDeleteLead = async (lead: Lead) => {\n    if (!window.confirm(`Are you sure you want to delete the lead for ${lead.full_name}?`)) {\n      return;\n    }\n\n    try {\n      await leadsAPI.deleteLead(lead.id);\n      setLeads(prev => prev.filter(l => l.id !== lead.id));\n      toast.success('Lead deleted successfully!');\n    } catch (error) {\n      console.error('Failed to delete lead:', error);\n      toast.error('Failed to delete lead');\n    }\n  };\n\n  const handleCancelForm = () => {\n    setShowLeadForm(false);\n    setEditingLead(null);\n    setPrepopulatedData(null);\n  };\n\n  const handleIncomingCall = (callData: {\n    full_name: string;\n    phone: string;\n    email?: string;\n    address?: string;\n    postcode?: string;\n    notes?: string;\n  }) => {\n    // Set the URL parameters to simulate dialer data\n    const url = new URL(window.location.href);\n    url.searchParams.set('full_name', callData.full_name);\n    url.searchParams.set('phone', callData.phone);\n    if (callData.email) url.searchParams.set('email', callData.email);\n    if (callData.address) url.searchParams.set('address', callData.address);\n    if (callData.postcode) url.searchParams.set('postcode', callData.postcode);\n    if (callData.notes) url.searchParams.set('notes', callData.notes);\n    \n    // Update the URL without reloading the page\n    window.history.replaceState({}, '', url.toString());\n    \n    // Set prepopulated data for the form\n    setPrepopulatedData({\n      full_name: callData.full_name,\n      phone: callData.phone,\n      email: callData.email || '',\n      address: callData.address || '',\n      postcode: callData.postcode || '',\n      notes: callData.notes || ''\n    });\n    \n    // Trigger the auto-open functionality\n    setShowLeadForm(true);\n    \n    toast.success(`Call completed! Lead form opened for ${callData.full_name}`, {\n      position: 'top-right',\n      autoClose: 4000,\n    });\n  };\n\n  const handleLeadInterest = (lead: Lead) => {\n    // Prepopulate form data when lead shows interest\n    setPrepopulatedData({\n      full_name: lead.full_name,\n      phone: lead.phone,\n      email: lead.email || '',\n      address: '', // These would come from the call data\n      postcode: '',\n      notes: `Lead showed interest during call. Original notes: ${lead.notes || ''}`\n    });\n    \n    setShowLeadForm(true);\n    toast.info(`${lead.full_name} is interested! Lead form opened with pre-filled information.`);\n  };\n\n  const handleCallEnd = () => {\n    // Refresh leads after call ends\n    fetchLeads();\n  };\n\n  const getStatusCounts = () => {\n    const counts = {\n      cold_call: 0,\n      interested: 0,\n      qualified: 0,\n      appointment_set: 0,\n      not_interested: 0,\n      tenant: 0,\n      other_disposition: 0,\n      sent_to_kelly: 0,\n      appointment_completed: 0,\n      sale_made: 0,\n      sale_lost: 0,\n    };\n\n    leads.forEach(lead => {\n      if (lead.status in counts) {\n        counts[lead.status as keyof typeof counts]++;\n      }\n    });\n\n    return counts;\n  };\n\n  const statusCounts = getStatusCounts();\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"card-margav p-6\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\n          <div>\n            <h2 className=\"text-3xl font-bold bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent\">\n              Agent Dashboard\n            </h2>\n            <p className=\"text-gray-600 mt-1\">Manage your assigned leads</p>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setShowNotifications(true)}\n              className=\"relative p-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              <span className=\"text-2xl\">🔔</span>\n              {unreadCount > 0 && (\n                <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                  {unreadCount}\n                </span>\n              )}\n            </button>\n            <button\n              onClick={() => setShowLeadForm(true)}\n              className=\"btn-margav-primary\"\n            >\n              Add New Lead\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats */}\n      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"card-margav p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-green-400 to-green-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-lg font-bold\">I</span>\n              </div>\n            </div>\n            <div className=\"ml-4 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Interested</dt>\n                <dd className=\"text-2xl font-bold text-gray-900\">{statusCounts.interested}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-margav p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-400 to-blue-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-lg font-bold\">Q</span>\n              </div>\n            </div>\n            <div className=\"ml-4 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Qualified</dt>\n                <dd className=\"text-2xl font-bold text-gray-900\">{statusCounts.qualified}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-margav p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-purple-400 to-purple-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-lg font-bold\">A</span>\n              </div>\n            </div>\n            <div className=\"ml-4 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Appointments</dt>\n                <dd className=\"text-2xl font-bold text-gray-900\">{statusCounts.appointment_set}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-margav p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-red-400 to-red-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-lg font-bold\">N</span>\n              </div>\n            </div>\n            <div className=\"ml-4 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Not Interested</dt>\n                <dd className=\"text-2xl font-bold text-gray-900\">{statusCounts.not_interested}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mock Call Simulator */}\n      <MockCall onIncomingCall={handleIncomingCall} />\n\n      {/* Call Simulator */}\n      <CallSimulator onLeadInterest={handleLeadInterest} onCallEnd={handleCallEnd} />\n\n      {/* Lead Form Modal */}\n      {showLeadForm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-full max-w-md shadow-lg rounded-md bg-white\">\n                <LeadForm\n                  lead={editingLead || undefined}\n                  onSubmit={editingLead ? handleUpdateLeadSubmit : handleCreateLead}\n                  onCancel={handleCancelForm}\n                  loading={formLoading}\n                  prepopulatedData={prepopulatedData || undefined}\n                />\n          </div>\n        </div>\n      )}\n\n      {/* Leads List */}\n      <div className=\"card-margav\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-xl font-semibold text-gray-900\">Your Leads</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">Manage and track your assigned leads</p>\n        </div>\n        <div className=\"p-6\">\n          {leads.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"mx-auto h-24 w-24 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\n                <span className=\"text-2xl text-gray-400\">📋</span>\n              </div>\n              <p className=\"text-gray-500 text-lg\">No leads assigned to you yet.</p>\n              <p className=\"text-gray-400 text-sm mt-2\">Use the \"Add New Lead\" button to get started.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n              {leads.map((lead) => (\n                <LeadCard\n                  key={lead.id}\n                  lead={lead}\n                  onUpdate={handleUpdateLead}\n                  onDelete={handleDeleteLead}\n                  showActions={true}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Notification Panel */}\n      <NotificationPanel\n        isOpen={showNotifications}\n        onClose={() => {\n          setShowNotifications(false);\n          fetchNotificationCount(); // Refresh count when closing\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AgentDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}