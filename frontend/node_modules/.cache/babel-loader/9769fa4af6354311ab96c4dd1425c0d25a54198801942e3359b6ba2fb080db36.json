{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI,setAuthToken}from'../api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('authToken');if(token){try{setAuthToken(token);const userData=await authAPI.getCurrentUser();setUser(userData);}catch(error){console.error('Failed to get current user:',error);setAuthToken(null);}}setLoading(false);};initializeAuth();},[]);const login=async(username,password)=>{try{const response=await authAPI.login({username,password});setAuthToken(response.token);setUser(response.user);}catch(error){console.error('Login failed:',error);throw error;}};const logout=()=>{authAPI.logout();setUser(null);};const value={user,login,logout,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","setAuthToken","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","login","username","password","response","logout","value","isAuthenticated","Provider"],"sources":["/Users/elarh/Desktop/Margav Energy CRM/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '../types';\nimport { authAPI, setAuthToken } from '../api';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          setAuthToken(token);\n          const userData = await authAPI.getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          setAuthToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await authAPI.login({ username, password });\n      setAuthToken(response.token);\n      setUser(response.user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    authAPI.logout();\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAExF,OAASC,OAAO,CAAEC,YAAY,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAU/C,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAA8BS,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGV,UAAU,CAACO,WAAW,CAAC,CACvC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACT,GAAI,CACFhB,YAAY,CAACgB,KAAK,CAAC,CACnB,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAApB,OAAO,CAACqB,cAAc,CAAC,CAAC,CAC/CR,OAAO,CAACO,QAAQ,CAAC,CACnB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDrB,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CACAc,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAAK,CAC1D,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA3B,OAAO,CAACwB,KAAK,CAAC,CAAEC,QAAQ,CAAEC,QAAS,CAAC,CAAC,CAC5DzB,YAAY,CAAC0B,QAAQ,CAACV,KAAK,CAAC,CAC5BJ,OAAO,CAACc,QAAQ,CAACf,IAAI,CAAC,CACxB,CAAE,MAAOU,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAM,MAAM,CAAGA,CAAA,GAAM,CACnB5B,OAAO,CAAC4B,MAAM,CAAC,CAAC,CAChBf,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAgB,KAAsB,CAAG,CAC7BjB,IAAI,CACJY,KAAK,CACLI,MAAM,CACNd,OAAO,CACPgB,eAAe,CAAE,CAAC,CAAClB,IACrB,CAAC,CAED,mBACET,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAlB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}